/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'

export function Brain(props) {
  const meshRef = useRef()
  const { nodes } = useGLTF('/models/brai.glb')
  
  // Create wireframe material with better colors
  const wireframeMaterial = useMemo(() => {
    return new THREE.MeshBasicMaterial({
      color: new THREE.Color('#4086f4'), // Electric blue
      wireframe: true,
      transparent: true,
      opacity: 0.8,
      wireframeLinewidth: 1
    })
  }, [])

  // Create a glow material for subtle highlights
  const glowMaterial = useMemo(() => {
    return new THREE.MeshBasicMaterial({
      color: new THREE.Color('#00ffff'), // Cyan for glow
      transparent: true,
      opacity: 0.2,
      side: THREE.BackSide
    })
  }, [])

  // Add animation effects
  useFrame((state) => {
    if (meshRef.current) {
      // Subtle rotation animation
    //   meshRef.current.rotation.x += 0.002;
      
      // Pulsing opacity based on time
      const pulseSpeed = 1.0;
      const pulseAmount = 0.2;
      const t = state.clock.getElapsedTime();
      wireframeMaterial.opacity = 0.6 + Math.sin(t * pulseSpeed) * pulseAmount;
      
      // Subtle color shift over time
      const hue = (t * 0.05) % 1;
      wireframeMaterial.color.setHSL(hue, 0.8, 0.5);
    }
  });

  return (
    <group {...props}>
      {/* Main wireframe mesh */}
      <mesh
        ref={meshRef}
        castShadow
        receiveShadow
        geometry={nodes.Brain_Part_06.geometry}
        material={wireframeMaterial}
        rotation={[0, Math.PI/2, 0]}
        scale={0.12}
      />
      
      {/* Glow mesh (slightly larger) */}
      {/* <mesh
        geometry={nodes.Brain_Part_06.geometry}
        material={glowMaterial}
        // rotation={[0, Math.PI/2, -Math.PI/2]}
        scale={0.11} // Slightly larger scale for glow effect
      /> */}
    </group>
  )
}

useGLTF.preload('/models/brai.glb')
