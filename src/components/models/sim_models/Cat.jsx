/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Evil_Katz (https://sketchfab.com/Evil_Katz)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/an-animated-cat-aec25699660043a29595f9572149d1e8
Title: An Animated Cat
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import PropTypes from 'prop-types'

export function Cat(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/cat.glb')
  const { actions } = useAnimations(animations, group)
  
  // Play animation when the cat is active
  useEffect(() => {
    // Play animation when the component is active
    if (props.isActive) {
      // Get the first animation or a specific animation if you know its name
      const animationName = Object.keys(actions)[0]
      if (actions[animationName]) {
        actions[animationName].reset().fadeIn(0.5).play()
      }
    } else {
      // Stop all animations when not active
      Object.values(actions).forEach(action => {
        if (action && action.isRunning && action.isRunning()) {
          action.fadeOut(0.5)
        }
      })
    }
  }, [props.isActive, actions])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="RootNode_(gltf_orientation_matrix)_0" rotation={[-Math.PI / 2, 0, 0]}>
                <group name="RootNode_(model_correction_matrix)_1">
                  <group name="catfbx_2" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="_3">
                      <group name="RootNode_4">
                        <group name="_5">
                          <group name="GLTF_created_0">
                            <primitive object={nodes.GLTF_created_0_rootJoint} />
                            <skinnedMesh
                              name="Object_12"
                              geometry={nodes.Object_12.geometry}
                              material={materials.Material_81}
                              skeleton={nodes.Object_12.skeleton}
                            />
                            <skinnedMesh
                              name="Object_14"
                              geometry={nodes.Object_14.geometry}
                              material={materials.Material_105}
                              skeleton={nodes.Object_14.skeleton}
                            />
                            <skinnedMesh
                              name="Object_16"
                              geometry={nodes.Object_16.geometry}
                              material={materials.Material_93}
                              skeleton={nodes.Object_16.skeleton}
                            />
                            <group name="_8" />
                            <group name="_9" />
                            <group name="_10" />
                          </group>
                        </group>
                      </group>
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

Cat.propTypes = {
  isActive: PropTypes.bool
}

useGLTF.preload('/models/cat.glb')