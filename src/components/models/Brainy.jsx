/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'

export function Brainy(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/models/brain.glb')
  
  // Load gradient texture for toon shading
  const gradientMap = useTexture('/gradients/5.jpg')
  
  // Create toon material with the gradient map
  const toonMaterial = useMemo(() => {
    // Configure texture for toon shading
    gradientMap.minFilter = THREE.NearestFilter
    gradientMap.magFilter = THREE.NearestFilter
    gradientMap.generateMipmaps = false
    
    return new THREE.MeshToonMaterial({
      color: new THREE.Color('#4086f4'), // Base blue color
      gradientMap: gradientMap,
      emissive: new THREE.Color('#00ffff'), // Subtle cyan glow
      emissiveIntensity: 0.2,
    })
  }, [gradientMap])
  
  // Update animation and interactivity
  useFrame((state) => {
    if (group.current) {
      // Mouse-based rotation
      const mouseX = state.mouse.x * 0.1
      const mouseY = state.mouse.y * 0.1
      
      group.current.rotation.y = -Math.PI/2 + mouseX
      group.current.rotation.x = mouseY
      
      // Subtle color pulsing for visual interest
      const pulseSpeed = 0.5
      const t = state.clock.getElapsedTime()
      const pulse = Math.sin(t * pulseSpeed) * 0.1 + 0.9
      
      // Update toon material color based on pulse
      toonMaterial.color.setRGB(
        0.25 + 0.1 * pulse,
        0.4 + 0.1 * pulse,
        0.96 // Keep blue dominant
      )
      
      // Adjust emissive intensity for subtle glow effect
      toonMaterial.emissiveIntensity = 0.1 + Math.sin(t * 0.7) * 0.1
    }
  })
  
  return (
    <group {...props}>
      <group 
        ref={group}
        position={[0, -0.05, 0]} 
        rotation={[0, -Math.PI/2, 0]}
        scale={1.8}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Stylized_Human_Brain.geometry}
          material={toonMaterial}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/brain.glb')
